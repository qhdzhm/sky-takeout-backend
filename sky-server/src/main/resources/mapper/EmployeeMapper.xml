<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- EmployeeMapper.xml -->
<mapper namespace="com.sky.mapper.EmployeeMapper">

    <!-- 分页查询 -->
    <select id="pageQuery" resultType="com.sky.entity.Employee">
        SELECT
        e.id,
        e.username,
        e.name,
        e.password,
        e.phone,
        e.email,
        e.avatar,
        e.sex,
        e.id_number as idNumber,
        e.role,
        e.work_status as workStatus,
        e.create_time as createTime,
        e.update_time as updateTime,
        e.create_user as createUser,
        e.update_user as updateUser,
        e.service_no as serviceNo,
        e.online_status as onlineStatus,
        e.max_concurrent_customers as maxConcurrentCustomers,
        e.current_customer_count as currentCustomerCount,
        e.skill_tags as skillTags,
        e.service_level as serviceLevel,
        e.last_login_time as lastLoginTime,
        e.last_active_time as lastActiveTime,
        e.is_guide as isGuide,
        e.guide_level as guideLevel,
        e.department,
        e.status,
        e.operator_type as operatorType,
        e.is_tour_master as isTourMaster,
        e.can_assign_orders as canAssignOrders
        FROM
        employees e

        <where>
            <if test="name != null and name != ''">
                AND e.name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="role != null">
                AND e.role = #{role}
            </if>
            <if test="workStatus != null">
                AND e.work_status = #{workStatus}
            </if>
        </where>

        ORDER BY e.id DESC
    </select>

    <!-- 插入员工数据 -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO employees
        (username, name, password, phone, email, avatar, sex, id_number, role, work_status, create_time, update_time, create_user, update_user)
        VALUES
        (#{username}, #{name}, #{password}, #{phone}, #{email}, #{avatar}, #{sex}, #{idNumber}, #{role}, #{workStatus}, #{createTime}, #{updateTime}, #{createUser}, #{updateUser})
    </insert>

    <!-- 更新员工信息 -->
    <update id="update">
        UPDATE employees
        <set>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="email != null">email = #{email},</if>
            <if test="avatar != null">avatar = #{avatar},</if>
            <if test="sex != null and sex != ''">sex = #{sex},</if>
            <if test="idNumber != null and idNumber != ''">id_number = #{idNumber},</if>
            <if test="role != null">role = #{role},</if>
            <if test="workStatus != null">work_status = #{workStatus},</if>
            <if test="lastLoginTime != null">last_login_time = #{lastLoginTime},</if>
            <!-- ====== 操作员分工管理字段 ====== -->
            <if test="operatorType != null">operator_type = #{operatorType},</if>
            <if test="isTourMaster != null">is_tour_master = #{isTourMaster},</if>
            <if test="canAssignOrders != null">can_assign_orders = #{canAssignOrders},</if>
            update_time = #{updateTime},
            update_user = #{updateUser}
        </set>
        WHERE id = #{id}
    </update>

    <!-- ===== 客服相关查询 ===== -->

    <!-- 分页查询客服员工 -->
    <select id="customerServicePageQuery" resultType="com.sky.vo.CustomerServiceVO">
        SELECT 
            e.id as employeeId,
            e.username,
            e.name,
            e.phone,
            e.sex,
            e.service_no as serviceNo,
            e.online_status as onlineStatus,
            e.max_concurrent_customers as maxConcurrentCustomers,
            e.current_customer_count as currentCustomerCount,
            e.skill_tags as skillTags,
            e.service_level as serviceLevel,
            e.last_login_time as lastLoginTime,
            e.last_active_time as lastActiveTime,
            e.create_time as createTime,
            e.update_time as updateTime,
            COALESCE(session_stats.total_sessions, 0) as totalSessions,
            COALESCE(session_stats.active_sessions, 0) as activeSessions,
            COALESCE(session_stats.avg_rating, 0) as avgRating,
            COALESCE(session_stats.total_service_duration, 0) as totalServiceDuration,
            COALESCE(session_stats.avg_service_duration, 0) as avgServiceDuration
        FROM employees e
        LEFT JOIN (
            SELECT 
                employee_id,
                COUNT(*) as total_sessions,
                COUNT(CASE WHEN session_status IN (0,1) THEN 1 END) as active_sessions,
                AVG(user_rating) as avg_rating,
                SUM(service_duration) as total_service_duration,
                AVG(service_duration) as avg_service_duration
            FROM service_session 
            WHERE employee_id IS NOT NULL
            GROUP BY employee_id
        ) session_stats ON e.id = session_stats.employee_id
        WHERE e.role IN (1, 2, 3)
        <if test="name != null and name != ''">
            AND e.name LIKE CONCAT('%', #{name}, '%')
        </if>
        <if test="onlineStatus != null">
            AND e.online_status = #{onlineStatus}
        </if>
        <if test="serviceLevel != null">
            AND e.service_level = #{serviceLevel}
        </if>
        ORDER BY e.role ASC, e.service_level DESC, e.create_time DESC
    </select>

    <!-- 插入客服员工 -->
    <insert id="insertCustomerService" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO employees
        (username, name, password, phone, sex, role, work_status, service_no, online_status, 
         max_concurrent_customers, current_customer_count, skill_tags, service_level, 
         create_time, update_time)
        VALUES
        (#{username}, #{name}, #{password}, #{phone}, #{sex}, #{role}, #{workStatus}, 
         #{serviceNo}, #{onlineStatus}, #{maxConcurrentCustomers}, #{currentCustomerCount}, 
         #{skillTags}, #{serviceLevel}, #{createTime}, #{updateTime})
    </insert>

    <!-- 更新客服员工信息 -->
    <update id="updateCustomerService">
        UPDATE employees
        <set>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="sex != null and sex != ''">sex = #{sex},</if>
            <if test="serviceNo != null and serviceNo != ''">service_no = #{serviceNo},</if>
            <if test="onlineStatus != null">online_status = #{onlineStatus},</if>
            <if test="maxConcurrentCustomers != null">max_concurrent_customers = #{maxConcurrentCustomers},</if>
            <if test="currentCustomerCount != null">current_customer_count = #{currentCustomerCount},</if>
            <if test="skillTags != null">skill_tags = #{skillTags},</if>
            <if test="serviceLevel != null">service_level = #{serviceLevel},</if>
            <if test="workStatus != null">work_status = #{workStatus},</if>
            <if test="lastLoginTime != null">last_login_time = #{lastLoginTime},</if>
            <if test="lastActiveTime != null">last_active_time = #{lastActiveTime},</if>
            update_time = #{updateTime}
        </set>
        WHERE id = #{id} AND role IN (1, 2, 3)
    </update>

    <!-- 获取客服统计信息 -->
    <select id="getCustomerServiceStatistics" resultType="com.sky.vo.CustomerServiceStatisticsVO">
        SELECT 
            (SELECT COUNT(*) FROM employees WHERE role IN (1, 2, 3)) as totalServices,
            (SELECT COUNT(*) FROM employees WHERE role IN (1, 2, 3) AND online_status = 1) as onlineServices,
            (SELECT COUNT(*) FROM service_session WHERE session_status IN (0,1)) as activeSessions,
            (SELECT COUNT(*) FROM service_session WHERE session_status = 0) as waitingQueue,
            (SELECT COUNT(*) FROM service_session WHERE DATE(create_time) = CURDATE()) as todayServices,
            (SELECT AVG(wait_duration) FROM service_session WHERE wait_duration IS NOT NULL) as avgWaitTime,
            (SELECT AVG(service_duration) FROM service_session WHERE service_duration IS NOT NULL) as avgServiceTime,
            (SELECT AVG(user_rating) FROM service_session WHERE user_rating IS NOT NULL) as satisfaction
    </select>
</mapper>
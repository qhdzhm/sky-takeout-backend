<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sky.mapper.CreditTransactionMapper">

    <resultMap id="BaseResultMap" type="com.sky.entity.CreditTransaction">
        <id column="id" property="id"/>
        <result column="transaction_no" property="transactionNo"/>
        <result column="agent_id" property="agentId"/>
        <result column="amount" property="amount"/>
        <result column="transaction_type" property="transactionType"/>
        <result column="booking_id" property="bookingId"/>
        <result column="balance_before" property="balanceBefore"/>
        <result column="balance_after" property="balanceAfter"/>
        <result column="note" property="note"/>
        <result column="created_by" property="createdBy"/>
        <result column="created_at" property="createdAt"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, transaction_no, agent_id, amount, transaction_type, booking_id,
        balance_before, balance_after, note, created_by, created_at
    </sql>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into credit_transaction (
            transaction_no, agent_id, amount, transaction_type, booking_id,
            balance_before, balance_after, note, created_by, created_at
        ) values (
            #{transactionNo}, #{agentId}, #{amount}, #{transactionType}, #{bookingId},
            #{balanceBefore}, #{balanceAfter}, #{note}, #{createdBy}, #{createdAt}
        )
    </insert>

    <select id="getById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from credit_transaction
        where id = #{id}
    </select>

    <select id="getByBookingId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from credit_transaction
        where booking_id = #{bookingId}
        <if test="transactionType != null and transactionType != ''">
            and transaction_type = #{transactionType}
        </if>
        order by created_at desc
    </select>

    <select id="getByAgentId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from credit_transaction
        where agent_id = #{agentId}
        <if test="transactionType != null and transactionType != ''">
            and transaction_type = #{transactionType}
        </if>
        <if test="startDate != null">
            and created_at >= #{startDate}
        </if>
        <if test="endDate != null">
            and created_at &lt;= #{endDate}
        </if>
        order by created_at desc
        limit #{offset}, #{limit}
    </select>

    <select id="countByAgentId" resultType="int">
        select count(*)
        from credit_transaction
        where agent_id = #{agentId}
        <if test="transactionType != null and transactionType != ''">
            and transaction_type = #{transactionType}
        </if>
        <if test="startDate != null">
            and created_at >= #{startDate}
        </if>
        <if test="endDate != null">
            and created_at &lt;= #{endDate}
        </if>
    </select>

    <select id="getAll" resultType="com.sky.entity.CreditTransaction">
        select ct.* 
        from credit_transaction ct
        left join agents a on ct.agent_id = a.id
        <where>
            <if test="agentId != null">
                and ct.agent_id = #{agentId}
            </if>
            <if test="transactionType != null and transactionType != ''">
                and ct.transaction_type = #{transactionType}
            </if>
            <if test="transactionNo != null and transactionNo != ''">
                and ct.transaction_no like concat('%', #{transactionNo}, '%')
            </if>
            <if test="startDate != null">
                and ct.created_at &gt;= #{startDate}
            </if>
            <if test="endDate != null">
                and ct.created_at &lt;= #{endDate}
            </if>
        </where>
        order by ct.created_at desc
        limit #{offset}, #{pageSize}
    </select>

    <select id="countAll" resultType="java.lang.Integer">
        select count(1)
        from credit_transaction ct
        left join agents a on ct.agent_id = a.id
        <where>
            <if test="agentId != null">
                and ct.agent_id = #{agentId}
            </if>
            <if test="transactionType != null and transactionType != ''">
                and ct.transaction_type = #{transactionType}
            </if>
            <if test="transactionNo != null and transactionNo != ''">
                and ct.transaction_no like concat('%', #{transactionNo}, '%')
            </if>
            <if test="startDate != null">
                and ct.created_at &gt;= #{startDate}
            </if>
            <if test="endDate != null">
                and ct.created_at &lt;= #{endDate}
            </if>
        </where>
    </select>

    <select id="sumAmount" resultType="java.math.BigDecimal">
        select sum(amount)
        from credit_transaction
        <where>
            <if test="agentId != null">
                and agent_id = #{agentId}
            </if>
            <if test="transactionType != null and transactionType != ''">
                and transaction_type = #{transactionType}
            </if>
            <if test="startDate != null">
                and created_at &gt;= #{startDate}
            </if>
            <if test="endDate != null">
                and created_at &lt;= #{endDate}
            </if>
        </where>
    </select>

    <select id="getAllForExport" resultType="com.sky.entity.CreditTransaction">
        select
        <include refid="Base_Column_List"/>
        from credit_transaction
        <where>
            <if test="agentId != null">
                and agent_id = #{agentId}
            </if>
            <if test="transactionType != null and transactionType != ''">
                and transaction_type = #{transactionType}
            </if>
            <if test="transactionNo != null and transactionNo != ''">
                and transaction_no like concat('%', #{transactionNo}, '%')
            </if>
            <if test="startDate != null">
                and created_at &gt;= #{startDate}
            </if>
            <if test="endDate != null">
                and created_at &lt;= #{endDate}
            </if>
        </where>
        order by created_at desc
    </select>
</mapper> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sky.mapper.VehicleAvailabilityMapper">

    <!-- 结果映射 -->
    <resultMap id="VehicleAvailabilityVOMap" type="com.sky.vo.VehicleAvailabilityVO">
        <result column="vehicle_id" property="vehicleId"/>
        <result column="date" property="date"/>
        <result column="available_start_time" property="availableStartTime"/>
        <result column="available_end_time" property="availableEndTime"/>
        <result column="status" property="status"/>
        <result column="max_groups" property="maxGroups"/>
        <result column="current_groups" property="currentGroups"/>
        <result column="notes" property="notes"/>
        <result column="vehicle_type" property="vehicleType"/>
        <result column="license_plate" property="licensePlate"/>
        <result column="seat_count" property="seatCount"/>
        <result column="current_location" property="currentLocation"/>
        <result column="fuel_level" property="fuelLevel"/>
        <result column="mileage" property="mileage"/>
        <result column="driver_info" property="driverInfo"/>
        <result column="recommended" property="recommended"/>
        <result column="recommend_reason" property="recommendReason"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <!-- 获取车辆可用性列表 -->
    <select id="getVehicleAvailability" resultMap="VehicleAvailabilityVOMap">
        SELECT 
            va.vehicle_id,
            va.available_date as date,
            va.start_time as available_start_time,
            va.end_time as available_end_time,
            va.status,
            1 as max_groups,
            0 as current_groups,
            va.notes,
            v.vehicle_type,
            v.license_plate,
            v.seat_count,
            va.current_location,
            va.fuel_level,
            va.mileage,
            COALESCE(driver_info.driver_names, '无指定司机') as driver_info,
            CASE 
                WHEN va.status = 'available' THEN TRUE
                ELSE FALSE
            END as recommended,
            CASE 
                WHEN va.status = 'available' THEN '可用'
                ELSE '不可用'
            END as recommend_reason,
            va.created_time as create_time,
            va.updated_time as update_time
        FROM vehicle_availability va
        LEFT JOIN vehicles v ON va.vehicle_id = v.vehicle_id
        LEFT JOIN (
            SELECT 
                vd.vehicle_id,
                GROUP_CONCAT(e.name SEPARATOR ', ') as driver_names
            FROM vehicle_driver vd
            LEFT JOIN employees e ON vd.employee_id = e.id
            WHERE e.status = 1
            GROUP BY vd.vehicle_id
        ) driver_info ON va.vehicle_id = driver_info.vehicle_id
        WHERE va.vehicle_id = #{vehicleId}
        <if test="startDate != null">
            AND va.available_date &gt;= #{startDate}
        </if>
        <if test="endDate != null">
            AND va.available_date &lt;= #{endDate}
        </if>
        ORDER BY va.available_date ASC
    </select>

    <!-- 根据日期获取车辆可用性 -->
    <select id="getVehicleAvailabilityByDate" resultMap="VehicleAvailabilityVOMap">
        SELECT 
            va.vehicle_id,
            va.available_date as date,
            va.start_time as available_start_time,
            va.end_time as available_end_time,
            va.status,
            1 as max_groups,
            0 as current_groups,
            va.notes,
            v.vehicle_type,
            v.license_plate,
            v.seat_count,
            va.current_location,
            va.fuel_level,
            va.mileage,
            COALESCE(driver_info.driver_names, '无指定司机') as driver_info,
            CASE 
                WHEN va.status = 'available' THEN TRUE
                ELSE FALSE
            END as recommended,
            CASE 
                WHEN va.status = 'available' THEN '可用'
                ELSE '不可用'
            END as recommend_reason,
            va.created_time as create_time,
            va.updated_time as update_time
        FROM vehicle_availability va
        LEFT JOIN vehicles v ON va.vehicle_id = v.vehicle_id
        LEFT JOIN (
            SELECT 
                vd.vehicle_id,
                GROUP_CONCAT(e.name SEPARATOR ', ') as driver_names
            FROM vehicle_driver vd
            LEFT JOIN employees e ON vd.employee_id = e.id
            WHERE e.status = 1
            GROUP BY vd.vehicle_id
        ) driver_info ON va.vehicle_id = driver_info.vehicle_id
        WHERE va.vehicle_id = #{vehicleId} AND va.available_date = #{date}
    </select>

    <!-- 插入车辆可用性 -->
    <insert id="insertVehicleAvailability">
        INSERT INTO vehicle_availability (
            vehicle_id, available_date, start_time, end_time, 
            status, notes, created_time, updated_time
        ) VALUES (
            #{vehicleId}, #{availableDate}, #{startTime}, #{endTime},
            #{status}, #{notes}, NOW(), NOW()
        )
    </insert>

    <!-- 更新车辆可用性 -->
    <update id="updateVehicleAvailability">
        UPDATE vehicle_availability 
        SET 
            start_time = #{startTime},
            end_time = #{endTime},
            status = #{status},
            notes = #{notes},
            updated_time = NOW()
        WHERE vehicle_id = #{vehicleId} AND available_date = #{availableDate}
    </update>

    <!-- 删除车辆可用性 -->
    <delete id="deleteVehicleAvailability">
        DELETE FROM vehicle_availability 
        WHERE vehicle_id = #{vehicleId} AND available_date = #{date}
    </delete>

    <!-- 设置车辆为使用中状态 -->
    <update id="setInUse">
        UPDATE vehicle_availability 
        SET status = 'in_use',
            updated_time = NOW()
        WHERE vehicle_id = #{vehicleId} AND available_date = #{date}
    </update>

    <!-- 设置车辆为可用状态 -->
    <update id="setAvailable">
        UPDATE vehicle_availability 
        SET status = 'available',
            updated_time = NOW()
        WHERE vehicle_id = #{vehicleId} AND available_date = #{date}
    </update>

    <!-- 重置车辆可用性状态 -->
    <update id="resetAvailability">
        UPDATE vehicle_availability 
        SET status = 'available', updated_time = NOW()
        WHERE vehicle_id = #{vehicleId} AND available_date = #{date}
    </update>

    <!-- 更新车辆可用性状态 -->
    <update id="updateAvailability">
        UPDATE vehicle_availability 
        SET start_time = #{startTime},
            end_time = #{endTime},
            status = CASE WHEN #{isAvailable} = TRUE THEN 'available' ELSE 'unavailable' END,
            updated_time = NOW()
        WHERE vehicle_id = #{vehicleId} AND available_date = #{date}
    </update>

    <!-- 检查车辆在指定时间段是否可用 -->
    <select id="checkAvailability" resultType="java.lang.Boolean">
        SELECT CASE 
            WHEN COUNT(*) > 0 AND va.status = 'available' THEN TRUE 
            ELSE FALSE 
        END
        FROM vehicle_availability va
        WHERE va.vehicle_id = #{vehicleId} 
        AND va.available_date = #{date}
        AND va.start_time &lt;= #{startTime}
        AND va.end_time &gt;= #{endTime}
        AND va.status = 'available'
    </select>

    <!-- 根据日期、时间和人数获取可用车辆 -->
    <select id="getAvailableVehiclesByDateTime" resultMap="VehicleAvailabilityVOMap">
        SELECT 
            va.id,
            va.vehicle_id,
            v.vehicle_type,
            v.license_plate,
            v.seat_count,
            va.available_date AS available_date,
            va.start_time AS available_start_time,
            va.end_time AS available_end_time,
            va.status,
            va.current_location,
            COALESCE(va.fuel_level, 80) AS fuel_level,
            COALESCE(va.mileage, 0) AS mileage,
            va.notes,
            'N/A' AS driver_info,
            CASE 
                WHEN va.status = 'available' 
                     AND (#{startTime} IS NULL OR va.start_time &lt;= #{startTime})
                     AND (#{endTime} IS NULL OR va.end_time &gt;= #{endTime})
                     AND (#{peopleCount} IS NULL OR v.seat_count &gt;= #{peopleCount})
                     AND NOT EXISTS (
                         SELECT 1 FROM tour_guide_vehicle_assignment t 
                         WHERE t.vehicle_id = va.vehicle_id 
                         AND t.assignment_date = va.available_date 
                         AND t.status != 'cancelled'
                     )
                THEN 1 ELSE 0 
            END AS recommended,
            CASE 
                WHEN va.status = 'available' 
                     AND (#{startTime} IS NULL OR va.start_time &lt;= #{startTime})
                     AND (#{endTime} IS NULL OR va.end_time &gt;= #{endTime})
                     AND (#{peopleCount} IS NULL OR v.seat_count &gt;= #{peopleCount})
                     AND NOT EXISTS (
                         SELECT 1 FROM tour_guide_vehicle_assignment t 
                         WHERE t.vehicle_id = va.vehicle_id 
                         AND t.assignment_date = va.available_date 
                         AND t.status != 'cancelled'
                     )
                THEN '状态可用，座位足够' 
                ELSE '不可用或座位不足' 
            END AS recommend_reason,
            va.created_time as create_time,
            va.updated_time as update_time
        FROM vehicle_availability va
        LEFT JOIN vehicles v ON va.vehicle_id = v.vehicle_id
        WHERE va.available_date = #{date}
            AND va.status = 'available'
            AND (#{startTime} IS NULL OR va.start_time &lt;= #{startTime})
            AND (#{endTime} IS NULL OR va.end_time &gt;= #{endTime})
            AND (#{peopleCount} IS NULL OR v.seat_count &gt;= #{peopleCount})
            AND NOT EXISTS (
                SELECT 1 FROM tour_guide_vehicle_assignment t 
                WHERE t.vehicle_id = va.vehicle_id 
                AND t.assignment_date = va.available_date 
                AND t.status != 'cancelled'
            )
        ORDER BY v.seat_count DESC, va.vehicle_id
    </select>

</mapper> 
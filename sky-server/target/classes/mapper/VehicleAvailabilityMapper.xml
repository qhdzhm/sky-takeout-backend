<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sky.mapper.VehicleAvailabilityMapper">

    <!-- 结果映射 -->
    <resultMap id="VehicleAvailabilityVOMap" type="com.sky.vo.VehicleAvailabilityVO">
        <result column="vehicle_id" property="vehicleId"/>
        <result column="date" property="date"/>
        <result column="available_start_time" property="availableStartTime"/>
        <result column="available_end_time" property="availableEndTime"/>
        <result column="status" property="status"/>
        <result column="max_groups" property="maxGroups"/>
        <result column="current_groups" property="currentGroups"/>
        <result column="notes" property="notes"/>
        <result column="vehicle_type" property="vehicleType"/>
        <result column="license_plate" property="licensePlate"/>
        <result column="seat_count" property="seatCount"/>
        <result column="current_location" property="currentLocation"/>
        <result column="fuel_level" property="fuelLevel"/>
        <result column="mileage" property="mileage"/>
        <result column="driver_info" property="driverInfo"/>
        <result column="recommended" property="recommended"/>
        <result column="recommend_reason" property="recommendReason"/>
    </resultMap>

    <!-- 获取车辆可用性列表 -->
    <select id="getVehicleAvailability" resultMap="VehicleAvailabilityVOMap">
        SELECT 
            va.vehicle_id,
            va.available_date as date,
            va.start_time as available_start_time,
            va.end_time as available_end_time,
            va.status,
            1 as max_groups,
            COALESCE(assigned_count.current_groups, 0) as current_groups,
            va.notes,
            v.vehicle_type,
            v.license_plate,
            v.seat_count,
            va.current_location,
            va.fuel_level,
            va.mileage,
            COALESCE(driver_info.driver_names, '无指定司机') as driver_info,
            CASE 
                WHEN va.status = 'available' AND COALESCE(assigned_count.current_groups, 0) = 0 THEN TRUE
                ELSE FALSE
            END as recommended,
            CASE 
                WHEN va.status = 'available' THEN '可用'
                WHEN COALESCE(assigned_count.current_groups, 0) > 0 THEN '使用中'
                ELSE '不可用'
            END as recommend_reason
        FROM vehicle_availability va
        LEFT JOIN vehicles v ON va.vehicle_id = v.vehicle_id
        LEFT JOIN (
            SELECT 
                vehicle_id, 
                assignment_date, 
                COUNT(*) as current_groups
            FROM guide_daily_assignment 
            WHERE assignment_status IN ('confirmed', 'in_progress')
            GROUP BY vehicle_id, assignment_date
        ) assigned_count ON va.vehicle_id = assigned_count.vehicle_id AND va.available_date = assigned_count.assignment_date
        LEFT JOIN (
            SELECT 
                vd.vehicle_id,
                GROUP_CONCAT(e.name SEPARATOR ', ') as driver_names
            FROM vehicle_driver vd
            LEFT JOIN employees e ON vd.employee_id = e.id
            WHERE e.status = 1
            GROUP BY vd.vehicle_id
        ) driver_info ON va.vehicle_id = driver_info.vehicle_id
        WHERE va.vehicle_id = #{vehicleId}
        <if test="startDate != null">
            AND va.available_date >= #{startDate}
        </if>
        <if test="endDate != null">
            AND va.available_date &lt;= #{endDate}
        </if>
        ORDER BY va.available_date ASC
    </select>

    <!-- 根据日期获取车辆可用性 -->
    <select id="getVehicleAvailabilityByDate" resultMap="VehicleAvailabilityVOMap">
        SELECT 
            va.vehicle_id,
            va.available_date as date,
            va.start_time as available_start_time,
            va.end_time as available_end_time,
            va.status,
            1 as max_groups,
            COALESCE(assigned_count.current_groups, 0) as current_groups,
            va.notes,
            v.vehicle_type,
            v.license_plate,
            v.seat_count,
            va.current_location,
            va.fuel_level,
            va.mileage,
            COALESCE(driver_info.driver_names, '无指定司机') as driver_info,
            CASE 
                WHEN va.status = 'available' AND COALESCE(assigned_count.current_groups, 0) = 0 THEN TRUE
                ELSE FALSE
            END as recommended,
            CASE 
                WHEN va.status = 'available' THEN '可用'
                WHEN COALESCE(assigned_count.current_groups, 0) > 0 THEN '使用中'
                ELSE '不可用'
            END as recommend_reason
        FROM vehicle_availability va
        LEFT JOIN vehicles v ON va.vehicle_id = v.vehicle_id
        LEFT JOIN (
            SELECT 
                vehicle_id, 
                assignment_date, 
                COUNT(*) as current_groups
            FROM guide_daily_assignment 
            WHERE assignment_status IN ('confirmed', 'in_progress')
            GROUP BY vehicle_id, assignment_date
        ) assigned_count ON va.vehicle_id = assigned_count.vehicle_id AND va.available_date = assigned_count.assignment_date
        LEFT JOIN (
            SELECT 
                vd.vehicle_id,
                GROUP_CONCAT(e.name SEPARATOR ', ') as driver_names
            FROM vehicle_driver vd
            LEFT JOIN employees e ON vd.employee_id = e.id
            WHERE e.status = 1
            GROUP BY vd.vehicle_id
        ) driver_info ON va.vehicle_id = driver_info.vehicle_id
        WHERE va.vehicle_id = #{vehicleId} AND va.available_date = #{date}
    </select>

    <!-- 插入车辆可用性 -->
    <insert id="insertVehicleAvailability">
        INSERT INTO vehicle_availability (
            vehicle_id, available_date, start_time, end_time, 
            status, notes, created_time, updated_time
        ) VALUES (
            #{vehicleId}, #{date}, #{availableStartTime}, #{availableEndTime},
            #{status}, #{notes}, NOW(), NOW()
        )
    </insert>

    <!-- 更新车辆可用性 -->
    <update id="updateVehicleAvailability">
        UPDATE vehicle_availability 
        SET 
            start_time = #{availableStartTime},
            end_time = #{availableEndTime},
            status = #{status},
            notes = #{notes},
            updated_time = NOW()
        WHERE vehicle_id = #{vehicleId} AND available_date = #{date}
    </update>

    <!-- 删除车辆可用性 -->
    <delete id="deleteVehicleAvailability">
        DELETE FROM vehicle_availability 
        WHERE vehicle_id = #{vehicleId} AND available_date = #{date}
    </delete>

</mapper> 